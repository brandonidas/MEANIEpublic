"use strict";var ApplicationConfiguration=function(){var applicationModuleName="choiciture",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularFileUpload","flow","angularUUID2","ngImgCrop","ngLoad","cropme","superswipe","ImageCropper","yaru22.angular-timeago","angulartics","angulartics.google.analytics","angularCharts"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("choices"),function(i,s,o,g,r,a,m){i.GoogleAnalyticsObject=r,i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date,a=s.createElement(o),m=s.getElementsByTagName(o)[0],a.async=1,a.src=g,m.parentNode.insertBefore(a,m)}(window,document,"script","//www.google-analytics.com/analytics.js","ga"),ga("create","UA-60269903-1","auto"),ga("send","pageview"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("angularUUID2",[]).factory("uuid2",[function(){function s4(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return{newuuid:function(){for(var s=[],hexDigits="0123456789abcdef",i=0;36>i;i++)s[i]=hexDigits.substr(Math.floor(16*Math.random()),1);return s[14]="4",s[19]=hexDigits.substr(3&s[19]|8,1),s[8]=s[13]=s[18]=s[23]="-",s.join("")},newguid:function(){return s4()+s4()+"-"+s4()+"-"+s4()+"-"+s4()+"-"+s4()+s4()+s4()}}}]),angular.module("angularUUID2",[]).factory("uuid2",[function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return{newuuid:function(){for(var e=[],t="0123456789abcdef",n=0;36>n;n++)e[n]=t.substr(Math.floor(16*Math.random()),1);return e[14]="4",e[19]=t.substr(3&e[19]|8,1),e[8]=e[13]=e[18]=e[23]="-",e.join("")},newguid:function(){return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}}}]),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("choices").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Choices","choices","dropdown","/choices(/create)?"),Menus.addSubMenuItem("topbar","choices","List Choices","choices"),Menus.addSubMenuItem("topbar","choices","New Choice","choices/create")}]),angular.module("choices").config(["$stateProvider",function($stateProvider){$stateProvider.state("listChoices",{url:"/choices",templateUrl:"modules/choices/views/list-choices.client.view.html"}).state("createChoice",{url:"/choices/create",templateUrl:"modules/choices/views/create-choice.client.view.html"}).state("viewChoice",{url:"/choices/:choiceId",templateUrl:"modules/choices/views/view-choice.client.view.html"}).state("editChoice",{url:"/choices/:choiceId/edit",templateUrl:"modules/choices/views/edit-choice.client.view.html"}).state("multipload",{url:"/multiuploadtest",templateUrl:"modules/choices/views/multiuploadtest.client.view.html"}).state("feedChoices",{url:"/feed",templateUrl:"modules/choices/views/feed-choices.client.view.html"}).state("breakDownChoice",{url:"/breakdown/:choiceId",templateUrl:"modules/choices/views/breakdown-choice.client.view.html"})}]),angular.module("choices").controller("BreakDownController",["$scope","$stateParams","$location","Authentication","Choices",function($scope,$stateParams,$location,Authentication,Choices){$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.optionsPath="modules/choices/img/options/",$scope.optionsFormat=".png",$scope.findOne=function(){$scope.choice=Choices.get({choiceId:$stateParams.choiceId}),console.log($scope.choice)},$scope.config={title:"",tooltips:!0,labels:!1,mouseover:function(){},mouseout:function(){},click:function(){},legend:{display:!0,position:"left",htmlEnabled:!1},innerRadius:0,lineLegend:"lineEnd",lineCurveType:"cardinal",isAnimate:!0,yAxisTickFormat:"s",xAxisMaxTicks:7,waitForHeightAndWidth:!1}}]),angular.module("choices").controller("ChoicesController",["$scope","$stateParams","$location","Authentication","Choices","OptionLike","$modal","$log","ChoiceFeed","nowTime",function($scope,$stateParams,$location,Authentication,Choices,OptionLike,$modal,$log,ChoiceFeed,nowTime){$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.nowTime=nowTime,$scope.optionsPath="modules/choices/img/options/",$scope.optionsFormat=".png",console.log($scope.user),$scope.optionLikeBase=function(optionId,optionNum,choice){for(var alreadyLiked=!1,optionNameLikes="option"+optionNum+"Likes",optionName="option"+optionNum,choice_id=choice._id,optionLike=new OptionLike({username:$scope.user.username,option_id:optionId,optionName:optionName,optionNameLikes:optionNameLikes,choice:choice,liker:[$scope.user]}),i=0;i<choice[optionNameLikes].length;i++)choice[optionNameLikes][i]==$scope.user._id&&(console.log("already liked!"),alreadyLiked=!0);if(0==alreadyLiked){optionLike.$save(),console.log("You just tried to like "+optionNameLikes+" id "+optionId);for(var ii=0;ii<$scope.choicesFeed.length;ii++)$scope.choicesFeed[ii]._id==choice_id&&($scope.choicesFeed[ii][optionNameLikes].push($scope.user._id),$scope.choicesFeed[ii][optionNameLikes].userLiked=!0)}},$scope.option1Like=function(optionid,choice){$scope.optionLikeBase(optionid,1,choice)},$scope.option2Like=function(optionid,choice){$scope.optionLikeBase(optionid,2,choice)},$scope.option3Like=function(optionid,choice){$scope.optionLikeBase(optionid,3,choice)},$scope.option4Like=function(optionid,choice){$scope.optionLikeBase(optionid,4,choice)},$scope.remove=function(choice){if(choice){choice.$remove();for(var i in $scope.choices)$scope.choices[i]===choice&&$scope.choices.splice(i,1)}else $scope.choice.$remove(function(){$location.path("feed")})},$scope.find=function(){$scope.choices=Choices.query()},$scope.feed=function(){$scope.choicesFeed=ChoiceFeed.query()},$scope.option3Loaded=function(index){void 0==index?$scope.choice.option3loaded=!0:$scope.choicesFeed[index].option3loaded=!0},$scope.option4Loaded=function(index){void 0==index?$scope.choice.option4loaded=!0:$scope.choicesFeed[index].option4loaded=!0},$scope.findOne=function(){$scope.choice=Choices.get({choiceId:$stateParams.choiceId})}}]),angular.module("choices").controller("ChoicesCreateController",["$scope","$stateParams","$location","Authentication","Choices","uuid2","$rootScope","flowFactory",function($scope,$stateParams,$location,Authentication,Choices,uuid2,$rootScope,flowFactory){$scope.uuidTest=uuid2.newuuid(),$scope.authentication=Authentication,$scope.user=Authentication.user,$scope.usePlaceHoldOptions=!0,$scope.uploadStatus="Upload Unfinished",$scope.finishUpload=function(){$scope.uploadStatus="Upload Finished"},$scope.uploadCounter=0,$scope.option1=uuid2.newuuid(),$scope.option2=uuid2.newuuid(),$scope.option3=uuid2.newuuid(),$scope.option4=uuid2.newuuid(),$scope.options=[$scope.option1,$scope.option2,$scope.option3,$scope.option4],$scope.create=function(){var choice=new Choices({choiceQuestion:this.choiceQuestion,option1:$scope.option1,option2:$scope.option2,option3:$scope.option3,option4:$scope.option4,created:this.created,user:$scope.user,username:$scope.user.username});choice.$save(function(){},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.flowObject=flowFactory.create({testChunks:!1,headers:{Here:"$scope.options[$scope.uploadCounter]"}}),$scope.flowObject.on("filesSubmitted",function(event,$flow){console.log($flow),console.log("files submitted!"),$scope.usePlaceHoldOptions=!1,$scope.flowObject.opts.target="/optionuploads/"+$scope.options[$scope.uploadCounter],console.log("Here: "+$scope.flowObject.opts.target)}),$scope.flowObject.on("fileSuccess",function(){$scope.uploadCounter++,$scope.uploadCounter<$scope.flowObject.files.length&&(console.log("Upload Counter: "+$scope.uploadCounter),$scope.flowObject.opts.target="/optionuploads/"+$scope.options[$scope.uploadCounter],console.log("Here: "+$scope.flowObject.opts.target))}),$scope.flowControlledBtn=function(){$scope.flowObject.upload()},$scope.flowObject.on("complete",function(){$location.path("/feed")})}]).config(["flowFactoryProvider",function(flowFactoryProvider){flowFactoryProvider.defaults={permanentErrors:[404,500,501],maxChunkRetries:1,chunkRetryInterval:5e3,simultaneousUploads:1,testChunks:!1},flowFactoryProvider.on("catchAll",function(){console.log("catchAll",arguments)})}]),angular.module("choices").factory("ChoiceFeed",["$resource",function($resource){return $resource("feed")}]).factory("UserFeed",["$resource",function($resource){return $resource("userfeed")}]),angular.module("choices").factory("Choices",["$resource",function($resource){return $resource("choices/:choiceId",{choiceId:"@_id"},{update:{method:"PUT"}})}]),angular.module("choices").factory("OptionLike",["$resource",function($resource){return $resource("/optionlike")}]),angular.module("choices").factory("Optionuploads",["$resource",function($resource){return $resource("user/:username")}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("notifs",{url:"/notifs",templateUrl:"modules/core/views/notifs.client.view.html"}).state("blog",{url:"/blog",templateUrl:"modules/core/views/blog/intro.blog.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.user=Authentication.user,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").controller("NotificationsController",["$scope","Authentication","Notify","$interval","UnseenNotifs",function($scope,Authentication,Notify,$interval,UnseenNotifs){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.user=Authentication.user,$scope.unseenNotifs=!1,$scope.userThumbURL="modules/users/img/profile/",$scope.userThumbFormat=".png",$scope.optionThumbURL="modules/choices/img/options/",$scope.optionThumbFormat=".png",$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.subControllerAccess="Success";var getNotifs=function(){return Notify.query()};$scope.list=function(){$scope.notifications=getNotifs(),console.log("List"),console.log($scope.notifications)},$scope.notifCheck=function(){$scope.newNotifs=UnseenNotifs.query(),$scope.unseenNotifs=$scope.newNotifs.length>0?!0:!1},$scope.seenNotifs=function(){UnseenNotifs.save()},$interval($scope.notifCheck,3e3)}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("Notify",["$resource",function($resource){return $resource("notifications")}]).factory("UnseenNotifs",["$resource",function($resource){return $resource("notifications/unseen")}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("displayProfile",{url:"/settings/displayprofile",templateUrl:"modules/users/views/settings/display-profile.client.view.html"}).state("uploadprofilepic",{url:"/settings/uploadprofilepic",templateUrl:"modules/users/views/settings/upload-profile-pic.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"}).state("view-profile",{url:"/user/:username",templateUrl:"modules/users/views/social/view-profile.client.view.html"}).state("search-user",{url:"/search",templateUrl:"modules/users/views/social/search-user.client.view.html"}).state("user-feed",{url:"/user-feed/:username",templateUrl:"modules/users/views/social/user-feed.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/feed"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/feed")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/feed")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("ProfilePicUploadController",["$scope","$window","$http","$upload","$location","Authentication",function($scope,$window,$http,$upload,$location,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.cropDone=!1,$scope.imageCropResult=null,$scope.showImageCropper=!1,$scope.$watch("imageCropResult",function(newVal){newVal&&(console.log("imageCropResult",newVal),$scope.file=newVal,$scope.cropDone=!0)}),$scope.uploadProfilePic=function(){var file=$scope.imageResize($scope.file),data={enctype:"multipart/form-data","Content-Type":"multipart/form-data",profilePicFile:file};console.log(data),$http.post("/users/uploadprofilepic",data).success(function(){console.log("success"),$location.path("/feed")}).error(function(){console.log("error")})},$scope.imageResize=function(file){function imageToDataUri(img,width,height){var canvas=document.createElement("canvas"),ctx=canvas.getContext("2d");return canvas.width=width,canvas.height=height,ctx.drawImage(img,0,0,width,height),canvas.toDataURL()}var img=new Image;return img.src=file,imageToDataUri(img,150,150)}}]),angular.module("users").controller("SearchUserController",["$location","$stateParams","$scope","Users","Authentication","SearchForUser",function($location,$stateParams,$scope,Users,Authentication,SearchForUser){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.searchForUser=function(){$scope.searchResults=SearchForUser.query({searchedUsername:this.searchTerm})}}]),angular.module("users").controller("OLDSettingsController",["$timeout","$upload","$scope","$http","$location","Users","Authentication",function($timeout,$upload,$scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})},$scope.config={width:600,height:600,quality:1},$scope.onFileSelect=function($files){$scope.files=[],$scope.files=$files},$scope.onUploadButton=function(){var progress=function(evt){console.log("percent: "+parseInt(100*evt.loaded/evt.total))},success=function(data){console.log(data),console.log("File Upload Successful"),$location.path("settings/displayprofile")},picFile=$scope.files;console.log(picFile);for(var i=0;i<picFile.length;i++){var file=picFile;$scope.upload=$upload.upload({url:"/users/uploadprofilepic",method:"POST",headers:{enctype:"multipart/form-data","Content-Type":"multipart/form-data"},data:{myObj:$scope.myModelObj},file:file}).progress(progress).success(success)}}}]).config(["$compileProvider",function($compileProvider){$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|data|blob|chrome-extension):/),$compileProvider.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|mailto|data|blob|chrome-extension):/)}]).directive("image",["$q",function($q){var URL=window.URL||window.webkitURL,getResizeArea=function(){var resizeAreaId="fileupload-resize-area",resizeArea=document.getElementById(resizeAreaId);return resizeArea||(resizeArea=document.createElement("canvas"),resizeArea.id=resizeAreaId,resizeArea.style.visibility="hidden",document.body.appendChild(resizeArea)),resizeArea},resizeImage=function(origImage,options){var maxHeight=options.resizeMaxHeight||300,maxWidth=options.resizeMaxWidth||250,quality=options.resizeQuality||.7,type=options.resizeType||"image/jpg",canvas=getResizeArea(),height=origImage.height,width=origImage.width;width>height?width>maxWidth&&(height=Math.round(height*=maxWidth/width),width=maxWidth):height>maxHeight&&(width=Math.round(width*=maxHeight/height),height=maxHeight),canvas.width=width,canvas.height=height;var ctx=canvas.getContext("2d");return ctx.drawImage(origImage,0,0,width,height),canvas.toDataURL(type,quality)},createImage=function(url,callback){var image=new Image;image.onload=function(){callback(image)},image.src=url},fileToDataURL=function(file){var deferred=$q.defer(),reader=new FileReader;return reader.onload=function(e){deferred.resolve(e.target.result)},reader.readAsDataURL(file),deferred.promise};return{restrict:"A",scope:{image:"=",resizeMaxHeight:"@?",resizeMaxWidth:"@?",resizeQuality:"@?",resizeType:"@?"},link:function(scope,element,attrs){var doResizing=function(imageResult,callback){createImage(imageResult.url,function(image){var dataURL=resizeImage(image,scope);imageResult.resized={dataURL:dataURL,type:dataURL.match(/:(.+\/.+);/)[1]},callback(imageResult)})},applyScope=function(imageResult){scope.$apply(function(){attrs.multiple?scope.image.push(imageResult):scope.image=imageResult})};element.bind("change",function(evt){attrs.multiple&&(scope.image=[]);for(var dataURLFunc=function(dataURL){imageResult.dataURL=dataURL},imageResultFunc=function(imageResult){applyScope(imageResult)},files=evt.target.files,i=0;i<files.length;i++){var imageResult={file:files[i],url:URL.createObjectURL(files[i])};fileToDataURL(files[i]).then(dataURLFunc),scope.resizeMaxHeight||scope.resizeMaxWidth?doResizing(imageResult,imageResultFunc):applyScope(imageResult)}})}}}]),angular.module("users").controller("SettingsController",["$timeout","$upload","$scope","$http","$location","Users","Authentication",function($timeout,$upload,$scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})},$scope.myImage="",$scope.myCroppedImage="";var handleFileSelect=function(evt){var file=evt.currentTarget.files[0],reader=new FileReader;reader.onload=function(evt){$scope.$apply(function($scope){$scope.myImage=evt.target.result})},reader.readAsDataURL(file)};angular.element(document.querySelector("#fileInput")).on("change",handleFileSelect)}]),angular.module("users").controller("ViewProfileController",["$location","$stateParams","$scope","Users","Followers","Authentication","FindUser","FindUserByID",function($location,$stateParams,$scope,Users,Followers,Authentication,FindUser){$scope.user=Authentication.user,$scope.userThumbURL="modules/users/img/profile/",$scope.userThumbFormat=".png",$scope.user||$location.path("/"),$scope.findOneUser=function(){$scope.profileUserName=$stateParams.username,$scope.profileUserDetails=FindUser.get({username:$stateParams.username}),$scope.isFollowing()},$scope.isFollowing=function(){console.log($scope.profileUserDetails)},$scope.followUser=function(){console.log($scope.user.username+" is trying to follow "+$scope.profileUserName);var follow=new Followers({followed:$scope.profileUserDetails});follow.$save(),$scope.findOneUser()}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("FindUser",["$resource",function($resource){return console.log("FindUser Service is being accessed"),$resource("user/:username")}]),angular.module("users").factory("FindUserByID",["$resource",function($resource){return $resource("/userbyid/:id")}]),angular.module("users").factory("Followers",["$resource",function($resource){return console.log("Followers Service is being accessed"),$resource("user/follower",{})}]),angular.module("users").factory("SearchForUser",["$resource",function($resource){return console.log("SearchForUser service accessed"),$resource("user/search/:searchedUsername")}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);